name: ci

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  rubocop:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 2.6.5

      - name: Cache gems
        uses: actions/cache@v2
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gems-

      - name: Install gems
        run: |
          bundle config path vendor/bundle
          bundle config set without 'test'
          bundle install --jobs 4 --retry 3

      - name: Run RuboCop
        run: bundle exec rubocop --parallel

  reek:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 2.6.5

      - name: Cache gems
        uses: actions/cache@v2
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gems-

      - name: Install gems
        run: |
          bundle config path vendor/bundle
          bundle config set without 'test'
          bundle install --jobs 4 --retry 3

      - name: Run Reek
        run: bundle exec reek --single-line .

  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:10
        ports: ["5432:5432"]
        env:
          POSTGRES_USER: "postgres"
          POSTGRES_PASSWORD: "postgres"
          POSTGRES_DB: "feeder_test"
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 2.6.5

      - name: Cache gems
        uses: actions/cache@v2
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gems-

      - name: Install gems
        run: |
          bundle config path vendor/bundle
          bundle install --jobs 4 --retry 3

      - name: Install PostgreSQL client
        run: |
          sudo apt-get --yes install libpq-dev

      - name: Run tests
        env:
          RAILS_MASTER_KEY: "${{ secrets.RAILS_MASTER_KEY_TEST }}"
          DATABASE_URL: "postgres://postgres:postgres@localhost:5432/feeder_test"
          RAILS_ENV: test
          WITH_COVERAGE: true
          DISABLE_SPRING: 1
        run: |
          bundle exec rails db:reset
          bundle exec rails test

      - name: Upload code coverage
        uses: actions/upload-artifact@v2
        with:
          name: code-coverage
          path: coverage/
